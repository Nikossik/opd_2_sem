<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Тест на концентрацию</title>
    <style>

        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background-image: url('public/images/background_gradient.png');
        }

        .sequence {
            margin: 20px 0;
            font-size: 16px;
            word-wrap: break-word;
        }

        .words input[type="checkbox"] {
            margin-right: 5px;
        }

        button {
            padding: 10px 20px;
            margin-top: 20px;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>
<h1>Тест на концентрацию</h1>
<div id="sequence" class="sequence"></div>
<div id="words" class="words"></div>
<div id="level-buttons">
    <button onclick="startTest('easy')">Легкий уровень</button>
    <button onclick="startTest('medium')">Средний уровень</button>
    <button onclick="startTest('hard')">Сложный уровень</button>
</div>
<button id="stop-button" class="hidden" onclick="stopTest()">Завершить досрочно</button>
<button id="restart-button" class="hidden" onclick="restartTest()">Пройти заново</button>
<div id="timerDisplay" style="font-size: 24px; margin-top: 20px;"></div>
<div id="results"></div>

<script>
    let timeoutHandle;
    const data = {
        easy: {
            sequence: "Ривырмпиыомпшыибогадельнятиваопрдлабризтмыдмиоытермоситовлимлюырагуашьижыртшкжщталезвиеиылрмивомиюлутшмрзакисьтлмдипкирккабантволюяиомялмиолы",
            words: ["богадельня", "бриз", "космодром", "термос", "гуашь", "кабан", "носок", "лезвие", "закись", "клетка"],
            answers: ["богадельня", "бриз", "термос", "гуашь", "кабан", "лезвие", "закись"]
        },
        medium: {
            sequence: "имолвыюткпримгытпщшысливаарщжпимгшжпрмивтикаблуктмрвржишщтилвирщшэьуыпимшакадемияитоылвжришклтиыашжттколбарлоыюиомюаоимоюимолбаркмивмишвдобложкаимолвмиолавмкняжнаимоылмивл",
            words: ["слива", "видеомагнитофон", "каблук", "колба", "кинокартина", "княжна", "барк", "обложка", "борец", "академия"],
            answers: ["слива", "каблук", "колба", "княжна", "барк", "обложка", "академия"]
        },
        hard: {
            sequence: "Пвррвоуррвуалгебрадлатзушмтчбсвниманиетбялыцшргррепрогнепроектловшйзкнстьчбяжаоырнгаджетнцшйзмчувытетрадьмйкемтраохьопеналцгнекычбдгсумкавыпчрсншяючемоданчиттвропноекуотпусккапр",
            words: ["алгебра", "проект", "традиция", "самолет", "радио", "компьютер", "полка", "гаджет", "пенал", "цирк"],
            answers: ["алгебра", "проект", "традиция", "самолет", "радио", "компьютер", "полка"]
        }
    };

    function startTest(level) {
        const levelData = data[level];
        const sequenceElement = document.getElementById('sequence');
        const wordsElement = document.getElementById('words');
        const resultsElement = document.getElementById('results');
        const levelButtons = document.getElementById('level-buttons');
        const stopButton = document.getElementById('stop-button');

        sequenceElement.textContent = levelData.sequence;
        wordsElement.innerHTML = ''; // Clear previous entries
        resultsElement.textContent = '';
        levelButtons.style.display = 'none'; // Hide level buttons
        stopButton.classList.remove('hidden'); // Show stop button
        document.getElementById('timerDisplay').style.display = 'block';

        let timeRemaining = getTestDuration(level) / 1000; // Convert to seconds
        const timerDisplay = document.getElementById('timerDisplay');
        timerDisplay.textContent = `Оставшееся время: ${timeRemaining} сек.`;

        window.timerInterval = setInterval(() => {
            timeRemaining--;
            timerDisplay.textContent = `Оставшееся время: ${timeRemaining} сек.`;
            if (timeRemaining <= 0) {
                clearInterval(timeoutHandle);
                timerDisplay.textContent = "Время вышло!";
                evaluateResults(levelData);
                stopButton.classList.add('hidden');
                levelButtons.style.display = 'block';
            }
        }, 1000);

        // Display the sequence and checkboxes
        sequenceElement.textContent = levelData.sequence;
        wordsElement.innerHTML = '';
        levelData.words.forEach(word => {
            const label = document.createElement('label');
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.value = word;
            label.appendChild(checkbox);
            label.appendChild(document.createTextNode(word));
            wordsElement.appendChild(label);
            wordsElement.appendChild(document.createElement('br'));
            console.log('Checkbox created:', checkbox); // вывод созданных checkbox в консоль
        });

        // Set a timer to evaluate the answers after the specified time
        timeoutHandle = setTimeout(() => {
            evaluateResults(levelData);
            stopButton.classList.add('hidden');
            levelButtons.style.display = 'block'; // Show level buttons again
        }, getTestDuration(level));
    }

    function stopTest() {
        const levelButtons = document.getElementById('level-buttons');
        const timerDisplay = document.getElementById('timerDisplay');
        timerDisplay.clearInterval; // Очистка текущего интервала таймера
        timerDisplay.textContent = "Тест завершен!";
        evaluateResults(data.easy); // Assuming 'easy' level for demonstration
        document.getElementById('stop-button').classList.add('hidden');
        levelButtons.style.display = 'none';
    }

    function evaluateResults(levelData) {
        clearInterval(window.timerInterval);
        const levelButtons = document.getElementById('level-buttons');
        const sequenceElement = document.getElementById('sequence');
        const wordsElement = document.getElementById('words');
        const resultsElement = document.getElementById('results');
        const stopButton = document.getElementById('stop-button');
        const restartButton = document.getElementById('restart-button');
        levelButtons.style.display = 'none';
        stopButton.classList.add('hidden');
        restartButton.classList.remove('hidden');

        // Проверка состояния элементов перед сбором значений
        console.log('Words Element InnerHTML:', wordsElement.innerHTML);

        // Сбор выбранных пользователем ответов
        const checkedValues = Array.from(wordsElement.querySelectorAll('input[type=checkbox]:checked')).map(el => el.value);
        console.log('Checked Values:', checkedValues);

        // Подсчет правильных ответов
        const correctCount = checkedValues.filter(value => levelData.answers.includes(value)).length;
        console.log('Correct Count:', correctCount);
        const incorrectCount = checkedValues.filter(value => !levelData.answers.includes(value)).length;
        console.log('Incorrect Count:', incorrectCount);
        const missedCount = levelData.answers.filter(answer => !checkedValues.includes(answer)).length;
        console.log('Missed Count:', missedCount);
        resultsElement.textContent = `Правильных ответов: ${correctCount}, Неправильных ответов: ${incorrectCount}, Пропущенных слов: ${missedCount}`;

        sequenceElement.textContent = ''; // Clear the sequence
        wordsElement.innerHTML = ''; // Clear the checkboxes
    }

    function restartTest() {
        const levelButtons = document.getElementById('level-buttons');
        const resultsElement = document.getElementById('results');
        const restartButton = document.getElementById('restart-button');
        const timerDisplay = document.getElementById('timerDisplay');
        
        timerDisplay.clearInterval;
        document.getElementById('timerDisplay').style.display = 'none';
        levelButtons.style.display = 'block'; // Показать кнопки выбора уровня
        resultsElement.textContent = ''; // Очистить результаты
        restartButton.classList.add('hidden'); // Скрыть кнопку рестарта
    }


    function getTestDuration(level) {
        switch (level) {
            case 'easy':
                return 150000; // 2.5 minutes
            case 'medium':
                return 120000; // 2 minutes
            case 'hard':
                return 60000; // 1 minute
        }
    }
</script>
</body>
</html>