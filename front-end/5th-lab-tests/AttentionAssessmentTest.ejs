<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Combined Tests</title>
    <link rel="stylesheet" href="5th-lab-tests/ComparisonMindTest.css">
    <style>
        body {
            background-image: url('images/background_gradient.png');
            font-family: Arial, sans-serif;
            padding: 20px;
            text-align: center; /* Выравнивание текста по центру */
            color: white; /* Цвет текста */
        }

        .main-container {
            display: block;
            justify-content: center; /* Центровка контейнеров по горизонтали */
            flex-wrap: wrap; /* Контейнеры будут переходить на новую строку, если не поместятся */
        }

        .test-container {
            width: 100%;
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            margin: 10px;
            box-sizing: border-box; /* Учитываем padding и border в ширине */
        }

        .square {
            width: 50px;
            height: 50px; /* Assuming size for visual purposes */
            margin: 5px;
            display: inline-block; /* Чтобы квадраты были в строку */
        }

        .control-container {
            margin-top: 20px; /* Добавить отступ сверху */
            display: block; /* Делаем контейнер блочным, чтобы он располагался ниже */
            text-align: center;
            width: 100%; /* Контейнер занимает всю ширину */
        }
    </style>
</head>
<body>
<div class="main-container">
    <div class="test-container">
        <h1>Тест на математику</h1>
        <div id="problem">Здесь будет пример</div>
        <button id="odd-button">Нечёт</button>
        <button id="even-button">Чёт</button>
        <br>
        <progress id="progress" value="0" max="100"></progress>
    </div>
    <div class="test-container">
        <h1>Тест на реакцию по цвету</h1>
        <progress id="reaction-progress" value="0" max="100"></progress>
        <div id="squares">
            <div class="square" id="square1"></div>
            <div class="square" id="square2"></div>
            <div class="square" id="square3"></div>
        </div>
        <div id="send-button-enclosing">
            <button id="send-answer-button">Отправить ответ</button>
            <button id="restart-button">Начать заново</button>
        </div>
        <div id="result-enclosing"></div> <!-- Для отображения результатов -->
    </div>
    <div style="display: block;">
        <select id="difficulty-select">
            <option value="light">Лёгкий</option>
            <option value="medium">Средний</option>
            <option value="hard">Тяжёлый</option>
        </select>
        <button id="start-test-button">Начать тест</button>
        <div>Осталось времени: <span id="time-left">0</span> секунд</div>
    </div>
</div>


<script>
    let intervalId;
    let reactionTime;
    let correctAnswer;
    let currentSquare;
    let correctTestCounter = 0;
    let reactionTimings = [], results = [];
    let level = "light";
    const colors = ['red', 'blue', 'green'];
    const keys = {'Z': 0, 'X': 1, 'C': 2};
    let testInterval;
    let testTimeout;
    let startTime;
    let testCounter = 0;
    let totalReactionTime = 0;
    let testPassed = false;

    document.getElementById("start-test-button").addEventListener('click', function () {
        level = document.getElementById("difficulty-select").value;
        startTests(level);
    });

    function startTests(level) {
        console.log(`Tests started at level: ${level}`);
        startVisualMathTest(level);
        setTimeout(() => startColorReactionTest(level), 5000); // Start color test after 5 seconds
    }

    function startVisualMathTest(level) {
        console.log('Visual Math Test started at level:', level);
        generateMathProblem();
        testInterval = setInterval(generateMathProblem, getTestSwitchTime(level));
    }

    function generateMathProblem() {
        let num1 = Math.floor(Math.random() * 10 + 1);
        let num2 = Math.floor(Math.random() * 10 + 1);
        correctAnswer = num1 + num2;
        document.getElementById("problem").innerHTML = `${num1} + ${num2}`;
    }

    document.getElementById("odd-button").addEventListener('click', () => checkAnswer(correctAnswer % 2 !== 0));
    document.getElementById("even-button").addEventListener('click', () => checkAnswer(correctAnswer % 2 === 0));

    function checkAnswer(isCorrect) {
        if (isCorrect) {
            alert("Правильно!");
        } else {
            alert("Неправильно! Правильный ответ был " + correctAnswer);
        }
    }

    function startColorReactionTest(level) {
        console.log('Color Reaction Test started at level:', level);
        clearInterval(testInterval); // Stop the math test
        hideButton(); // Prepare UI for reaction test
        let reactionTestCount = 0;
        let maxTestCount = 10;
        testInterval = setInterval(() => {
            if (reactionTestCount++ < maxTestCount) {
                displayColorSquare();
            } else {
                clearInterval(testInterval);
                alert("Тест на реакцию завершён. Среднее время реакции: " + (totalReactionTime / maxTestCount).toFixed(2) + "ms");
            }
        }, getTestSwitchTime(level));
    }

    function displayColorSquare() {
        let colorIndex = Math.floor(Math.random() * 3);
        let square = document.getElementById(`square${colorIndex + 1}`);
        square.style.backgroundColor = colors[colorIndex];
        startTime = new Date();
        document.addEventListener('keydown', event => {
            if (event.key.toUpperCase() === 'Z' || event.key.toUpperCase() === 'X' || event.key.toUpperCase() === 'C') {
                if (keys[event.key.toUpperCase()] === colorIndex) {
                    let reactionTime = new Date() - startTime;
                    totalReactionTime += reactionTime;
                    square.style.backgroundColor = 'white'; // Reset color
                }
            }
        });
    }

    function hideButton() {
        document.getElementById("start-test-button").style.display = "none";
    }

    function getTestSwitchTime(level) {
        switch (level) {
            case "light":
                return 2000;
            case "medium":
                return 1500;
            case "hard":
                return 750;
        }
    }

    function getTestDuration(level) {
        switch (level) {
            case "light":
                return 60000; // 1 minute
            case "medium":
                return 120000; // 2 minutes
            case "hard":
                return 180000; // 3 minutes
        }
    }
</script>

</body>
</html>
