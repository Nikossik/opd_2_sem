<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel = "stylesheet" href = "2nd-lab-tests/MultipleColorTestStyle.css">
    <title>Multiple Color Test</title>
</head>
<body>
    <h1>Multiple Color Reaction Test</h1>
    <progress id="progress" value="0" max="100"></progress>
    <div id="reaction-time-enclosing"></div>
</body>
<script>
    let initialColor = "white";
    let testStarted = false, testPassed = false, newColor=false;
    let previousTime = 0;
    let colors = ["red", "green", "blue"];
    let reactionTimings = [], results = [];
    let bodyElement = document.getElementsByTagName("body")[0];
    let progressElement = document.getElementById("progress");
    let startTime;
    let currentColor = 0;

    async function sendData(){
        if(testPassed){
            const data = {
                testType : "3_colors",
                reactionTimings: results.at(-1)
            }

            let url = ''
            const urlObject = new URL(window.location.href)

            if (urlObject.searchParams.has('data')){
                url += '/complex_reaction_test?data=' + encodeURIComponent(urlObject.searchParams.get('data'))
            } else {
                url += '/complex_reaction_test'
            }

            await fetch(url, {
                method: 'POST',
                body: JSON.stringify(data),
                headers: { 'Content-Type': 'application/json' },
            })
                .then(res => {
                    console.log(res)
                    // Redirect to another URL
                    window.location.href = res.url;
                })
                .catch(error => console.error(error));

        }
    }

    // задаем функцию, которая будет менять цвет фона и замерять время реакции пользователя
    function changeColor() {
        setTimeout(() => {
            bodyElement.style.backgroundColor = colors[currentColor];
            newColor = true;
            startTime = new Date().getTime();
        }, Math.random() * 5000)
    }

    // задаем функцию, которая будет вызываться при нажатии на клавишу пробел
    function handleKeyPress(event) {
        // проверяем, что нажата именно клавиша пробел
        if (event.keyCode === 32 && testStarted && newColor) {
            let endTime = new Date().getTime(); // сохраняем время завершения изменения цвета фона
            let reactionTime = endTime - startTime; // вычисляем время реакции пользователя
            document.getElementById("reaction-time-enclosing").innerHTML = "Результаты попытки: " + reactionTime + " мс.";
            reactionTimings.push(reactionTime);
            currentColor++; // переходим к следующему цвету
            newColor = false;
            // если достигли последнего цвета, то завершаем тест
            if (currentColor === colors.length) {
                endTest();
            } else {
                changeColor(); // меняем цвет фона на следующий цвет
                // обновляем индикатор прогресса выполнения теста
                progressElement.value = (currentColor) / colors.length * 100;
            }
        }
    }

    // добавляем обработчик события нажатия на клавишу
    document.addEventListener("keydown", handleKeyPress);

    // задаем начальный цвет фона страницы
    bodyElement.style.backgroundColor = initialColor;

    // задаем функцию, которая начнет тест
    function startTest(event) {
        alert("Нажмите на клавишу пробел, когда увидите изменение цвета фона страниц");
        if(event.keyCode !== 32 && currentColor === 0){
            testStarted = true;
            startButton.style.display = "none";
            changeColor();
            startTime = new Date().getTime(); // сохраняем время начала изменения цвета фона
            // добавляем фокус на страницу, чтобы пользователь мог нажать на клавишу без необходимости клика на страницу
            bodyElement.focus();
            progressElement.max = 100;
        }
    }

    // задаем функцию, которая завершит тест
    function endTest() {
        testStarted = false;
        results.push(reactionTimings);
        reactionTimings = [];

        if (!testPassed){
            bodyElement.style.backgroundColor = initialColor;

            const submitButton = document.createElement("button")
            submitButton.id = "submit-button"
            submitButton.innerHTML = "ОТПРАВИТЬ РЕЗУЛЬТАТ"
            submitButton.onclick = sendData
            bodyElement.appendChild(submitButton)

            const restartButton = document.createElement("button");
            restartButton.id = "restart-button"; 
            restartButton.innerHTML = "ПРОЙТИ ЗАНОВО";
            restartButton.onclick = restartTest;
            bodyElement.appendChild(restartButton);

            document.getElementById("reaction-time-enclosing").innerHTML = "Результаты теста: " + results.join(" мс, ") + " мс.";
        }

        testPassed = true;

        bodyElement.style.backgroundColor = initialColor; // возвращаем начальный цвет фона страницы
        currentColor = 0; // сбрасываем номер текущего цвета
        progressElement.value = 0; // обнуляем индикатор прогресса выполнения теста
    }

    // функция для перезапуска теста
    function restartTest() {
        testStarted = false; // устанавливаем флаг начала теста в false
        testPassed = false; // устанавливаем флаг прохождения теста в false
        newColor = false; // сбрасываем флаг нового цвета

        // Очищаем результаты
        reactionTimings = [];
        results = [];

        // Очищаем отображение результатов
        document.getElementById("reaction-time-enclosing").innerHTML = "";

        // Показываем кнопку "НАЧАТЬ ТЕСТ"
        startButton.style.display = "";

        // Удаляем кнопки "ОТПРАВИТЬ РЕЗУЛЬТАТ" и "ПРОЙТИ ЗАНОВО", если они есть
        const submitButton = document.getElementById("submit-button");
        if (submitButton) {
            submitButton.parentNode.removeChild(submitButton);
        }
        const restartButton = document.getElementById("restart-button");
        restartButton.parentNode.removeChild(restartButton);

        // Создаем кнопку "НАЧАТЬ ТЕСТ"
        createStartButton();
    }

    // функция для создания кнопки "НАЧАТЬ ТЕСТ"
    function createStartButton() {
        startButton.innerHTML = "НАЧАТЬ ТЕСТ";
        startButton.onclick = startTest;
        bodyElement.appendChild(startButton);
    }

    // создаем кнопку "НАЧАТЬ ТЕСТ"
    const startButton = document.createElement("button");
    createStartButton();
</script> 
</html>